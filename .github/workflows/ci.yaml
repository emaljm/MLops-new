# name: CI Pipeline

# # Trigger CI on pushes to main branch and PRs
# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   project-testing:
#     runs-on: ubuntu-latest

#     steps:
#       # 1️⃣ Checkout the repository
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # 2️⃣ Set up Python
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       # 3️⃣ Cache pip dependencies
#       - name: Cache pip
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/pip
#           key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
#           restore-keys: |
#             ${{ runner.os }}-pip-



#       # 4️⃣ Install dependencies
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       # 7️⃣ Download NLTK stopwords for preprocessing
#       - name: Download NLTK data
#         run: |
#           python -m pip install --upgrade nltk
#           python -c "import nltk; nltk.download('stopwords')"


#       # 6️⃣ Run DVC pipeline
#       - name: Reproduce DVC pipeline
#         run: |
#           dvc repro


name: CI Pipeline

on:
  push:
    branches: [main]

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      # 3️⃣ Cache pip dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4️⃣ Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest dvc[s3,gdrive] mlflow

      # 5️⃣ Download NLTK stopwords
      - name: Download NLTK data
        run: |
          python -m pip install --upgrade nltk
          python -c "import nltk; nltk.download('stopwords')"

      # 5️⃣ Download NLTK wordnet
      - name: Download NLTK data
        run: |
          python -m pip install --upgrade nltk
          python -c "import nltk; nltk.download('wordnet')"

      # 7️⃣ Run DVC pipeline
      - name: Reproduce DVC pipeline
        run: dvc repro

      # 8️⃣ Run tests
      - name: Run pytest
        run: pytest tests/ --maxfail=1 --disable-warnings -q

      # 9️⃣ Promote best model to Production
      - name: Promote best model
        run: python src/model/promote_model.py
        env:
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_USER }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_PASSWORD }}
